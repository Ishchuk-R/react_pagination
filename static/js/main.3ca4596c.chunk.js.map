{"version":3,"sources":["helper/api.js","components/Pagination.js","components/VisiblePost.js","App.js","index.js"],"names":["PostFromSever","a","fetch","posts","json","Pagination","total","perPage","page","onPageChange","paginationItem","Math","ceil","paginationList","i","push","className","href","disabled","onClick","e","map","numberPage","key","random","VisiblePost","startPost","finishPost","slice","post","id","title","App","props","useState","getPosts","setPage","setPerPage","useEffect","then","value","onChange","event","target","p","CurrentPage","preventDefault","length","ReactDOM","render","document","getElementById"],"mappings":"2NAAaA,EAAa,uCAAG,4BAAAC,EAAA,sEACPC,MAAM,8CADC,cACrBC,EADqB,yBAGpBA,EAAMC,QAHc,2CAAH,qDCGbC,EAAa,SAAC,GAIzB,IAJqE,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC3CC,EAAiBC,KAAKC,KAAKN,EAAQC,GACnCM,EAAiB,GAEdC,EAAI,EAAGA,GAAKJ,EAAgBI,IACnCD,EAAeE,KAAKD,GAGtB,OACE,wBAAIE,UAAU,cACZ,wBAAIA,UAAU,aACZ,uBACEC,KAAK,IACLC,SAAUV,EAAO,EACjBW,QAAS,SAAAC,GAAC,OAAIX,EAAaW,EAAGZ,EAAO,IACrCQ,UAAU,aAJZ,SASDH,EAAeQ,KAAI,SAAAC,GAAU,OACb,IAAfA,GACGA,IAAeZ,GACfY,IAAed,GACfc,IAAed,EAAO,GACtBc,IAAed,EAAO,EAErB,wBACEe,IAAKD,EAAaX,KAAKa,SACvBR,UAAWM,IAAed,EAAO,mBAAqB,aAEtD,uBACES,KAAK,IACLE,QAAS,SAAAC,GAAC,OAAIX,EAAaW,EAAGE,IAC9BN,UAAU,aAETM,IAGY,IAAfA,GAAoBA,IAAeZ,EAAiB,EACtD,mCACE,QAGR,wBAAIM,UAAU,aACZ,uBACEC,KAAK,IACLC,SAAUV,EAAOE,EAAiB,EAClCS,QAAS,SAAAC,GAAC,OAAIX,EAAaW,EAAGZ,EAAO,IACrCQ,UAAU,aAJZ,WC7CKS,EAAc,SAAC,GAA8B,IAA5BtB,EAA2B,EAA3BA,MAAOK,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACnCmB,GAAalB,EAAO,GAAKD,EACzBoB,EAAaD,EAAYnB,EAE/B,OACEJ,EAAMyB,MAAMF,EAAWC,GAAYN,KAAI,SAAAQ,GAAI,OACzC,yBAAKb,UAAU,OAAOO,IAAKM,EAAKC,IAC7B,IACD,0BAAMd,UAAU,UAAUa,EAAKC,IAC9BD,EAAKE,WCkDCC,EAtDH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACd/B,EADc,KACPgC,EADO,OAEGD,mBAAS,GAFZ,mBAEd1B,EAFc,KAER4B,EAFQ,OAGSF,mBAAS,GAHlB,mBAGd3B,EAHc,KAGL8B,EAHK,KAyBrB,OAJAC,qBAAU,WACRtC,IAAgBuC,KAAKJ,KACpB,IAGD,yBAAKnB,UAAU,aACb,0CACA,4BACEwB,MAAOjC,EACPkC,SAhBsB,SAACC,GAC3BN,EAAQ,GACRC,GAAYK,EAAMC,OAAOH,QAerBxB,UAAU,gBAZM,CAAC,EAAG,EAAG,GAAI,IAcZK,KAAI,SAAAuB,GAAC,OAClB,4BAAQrB,IAAKqB,EAAGJ,MAAOI,GAAIA,OAI/B,kBAAC,EAAD,CACEpC,KAAMA,EACND,QAASA,EACTJ,MAAOA,IAGT,kBAAC,EAAD,CACEM,aAxCe,SAACW,EAAGyB,GACvBzB,EAAE0B,iBACED,EAAc,GAAKA,EAAclC,KAAKC,KAAKT,EAAM4C,OAASxC,IAI9D6B,EAAQS,IAmCJvC,MAAOH,EAAM4C,OACbxC,QAASA,EACTC,KAAMA,MCpDdwC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3ca4596c.chunk.js","sourcesContent":["export const PostFromSever = async() => {\n  const posts = await fetch('https://jsonplaceholder.typicode.com/posts');\n\n  return posts.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Pagination = ({ total, perPage, page, onPageChange }) => {\n  const paginationItem = Math.ceil(total / perPage);\n  const paginationList = [];\n\n  for (let i = 1; i <= paginationItem; i++) {\n    paginationList.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className=\"page-item\">\n        <a\n          href=\"#\"\n          disabled={page < 2}\n          onClick={e => onPageChange(e, page - 1)}\n          className=\"page-link\"\n        >\n          «\n        </a>\n      </li>\n      {paginationList.map(numberPage => (\n        numberPage === 1\n        || numberPage === paginationItem\n        || numberPage === page\n        || numberPage === page - 1\n        || numberPage === page + 1\n          ? (\n            <li\n              key={numberPage + Math.random()}\n              className={numberPage === page ? 'page-item active' : 'page-item'}\n            >\n              <a\n                href=\"#\"\n                onClick={e => onPageChange(e, numberPage)}\n                className=\"page-link\"\n              >\n                {numberPage}\n              </a>\n            </li>\n          ) : numberPage === 2 || numberPage === paginationItem - 1 ? (\n            <li>...</li>\n          ) : null\n      ))}\n\n      <li className=\"page-item\">\n        <a\n          href=\"#\"\n          disabled={page > paginationItem - 1}\n          onClick={e => onPageChange(e, page + 1)}\n          className=\"page-link\"\n        >\n          »\n        </a>\n      </li>\n\n    </ul>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const VisiblePost = ({ posts, page, perPage }) => {\n  const startPost = (page - 1) * perPage;\n  const finishPost = startPost + perPage;\n\n  return (\n    posts.slice(startPost, finishPost).map(post => (\n      <div className=\"item\" key={post.id}>\n        {' '}\n        <span className=\"number\">{post.id}</span>\n        {post.title}\n      </div>\n    ))\n  );\n};\n\nVisiblePost.propTypes = {\n  posts: PropTypes.arrayOf().isRequired,\n  page: PropTypes.string.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { PostFromSever } from './helper/api';\nimport { Pagination } from './components/Pagination';\n\nimport { VisiblePost } from './components/VisiblePost';\n\nconst App = (props) => {\n  const [posts, getPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (e, CurrentPage) => {\n    e.preventDefault();\n    if (CurrentPage < 1 || CurrentPage > Math.ceil(posts.length / perPage)) {\n      return;\n    }\n\n    setPage(CurrentPage);\n  };\n\n  const handleChangePerPage = (event) => {\n    setPage(1);\n    setPerPage(+event.target.value);\n  };\n\n  const selectPerPage = [3, 5, 10, 20];\n\n  useEffect(() => {\n    PostFromSever().then(getPosts);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Pagination</h1>\n      <select\n        value={perPage}\n        onChange={handleChangePerPage}\n        className=\"form-control\"\n      >\n        {selectPerPage.map(p => (\n          <option key={p} value={p}>{p}</option>\n        ))}\n\n      </select>\n      <VisiblePost\n        page={page}\n        perPage={perPage}\n        posts={posts}\n      />\n\n      <Pagination\n        onPageChange={onPageChange}\n        total={posts.length}\n        perPage={perPage}\n        page={page}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}