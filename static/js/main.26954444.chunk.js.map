{"version":3,"sources":["helper/api.js","components/Pagination.js","components/VisiblePost.js","App.js","index.js"],"names":["PostFromSever","a","fetch","posts","json","Pagination","total","perPage","page","onPageChange","paginationItem","Math","ceil","paginationList","i","push","className","type","disabled","onClick","map","numberPage","key","random","href","VisiblePost","startPost","finishPost","slice","post","id","title","App","props","useState","getPosts","history","useHistory","location","useLocation","useEffect","then","searchParams","URLSearchParams","search","pageParams","Number","get","perPageParams","value","onChange","event","set","target","toString","p","path","render","match","CurrentPage","length","ReactDOM","document","getElementById"],"mappings":"iRAAaA,EAAa,uCAAG,4BAAAC,EAAA,sEACPC,MAAM,8CADC,cACrBC,EADqB,yBAGpBA,EAAMC,QAHc,2CAAH,qDCGbC,EAAa,SAAC,GAIzB,IAJqE,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC3CC,EAAiBC,KAAKC,KAAKN,EAAQC,GACnCM,EAAiB,GAEdC,EAAI,EAAGA,GAAKJ,EAAgBI,IACnCD,EAAeE,KAAKD,GAGtB,OACE,wBAAIE,UAAU,cACZ,wBAAIA,UAAU,aACZ,4BACEC,KAAK,SACLC,SAAUV,EAAO,EACjBW,QAAS,kBAAMV,EAAaD,EAAO,IACnCQ,UAAU,aAJZ,SASDH,EAAeO,KAAI,SAAAC,GAAU,OACb,IAAfA,GACGA,IAAeX,GACfW,IAAeb,GACfa,IAAeb,EAAO,GACtBa,IAAeb,EAAO,EAErB,wBACEc,IAAKD,EAAaV,KAAKY,SACvBP,UAAWK,IAAeb,EAAO,mBAAqB,aAEtD,4BACES,KAAK,SACLE,QAAS,kBAAMV,EAAaY,IAC5BL,UAAU,aAETK,IAGY,IAAfA,GAAoBA,IAAeX,EAAiB,EACtD,wBAAIY,IAAKD,EAAaV,KAAKY,UAA3B,OACE,QAGR,wBAAIP,UAAU,aACZ,4BACEC,KAAK,SACLO,KAAK,IACLN,SAAUV,EAAOE,EAAiB,EAClCS,QAAS,kBAAMV,EAAaD,EAAO,IACnCQ,UAAU,aALZ,WC7CKS,EAAc,SAAC,GAA8B,IAA5BtB,EAA2B,EAA3BA,MAAOK,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACnCmB,GAAalB,EAAO,GAAKD,EACzBoB,EAAaD,EAAYnB,EAE/B,OACEJ,EAAMyB,MAAMF,EAAWC,GAAYP,KAAI,SAAAS,GAAI,OACzC,yBAAKb,UAAU,OAAOM,IAAKO,EAAKC,IAC7B,IACD,0BAAMd,UAAU,UAAUa,EAAKC,IAC9BD,EAAKE,WCiECC,EApEH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACd/B,EADc,KACPgC,EADO,KAEfC,EAAUC,cACVC,EAAWC,cAEjBC,qBAAU,WACRxC,IAAgByC,KAAKN,KACpB,IAEH,IAAMO,EAAe,IAAIC,gBAAgBL,EAASM,QAC5CC,EAAaC,OAAOJ,EAAaK,IAAI,UAAY,EACjDC,EAAgBF,OAAOJ,EAAaK,IAAI,aAAe,EAuB7D,OACE,yBAAK/B,UAAU,aACb,0CACA,4BACEiC,MAAOD,EACPE,SAbsB,SAACC,GAC3BT,EAAaU,IAAI,UAAWD,EAAME,OAAOJ,OACzCP,EAAaU,IAAI,OAAQ,GACzBhB,EAAQrB,KAAK,CACX6B,OAAQF,EAAaY,cAUnBtC,UAAU,gBA5BM,CAAC,EAAG,EAAG,GAAI,IA8BZI,KAAI,SAAAmC,GAAC,OAClB,4BAAQjC,IAAKiC,EAAGN,MAAOM,GAAIA,OAI/B,kBAAC,IAAD,CACEC,KAAK,IACLC,OAAQ,cAAGC,MAAH,OACN,kBAAC,EAAD,CACElD,KAAMqC,EACNtC,QAASyC,EACT7C,MAAOA,OAKb,kBAAC,EAAD,CACEM,aA7Ce,SAACkD,GAChBA,EAAc,GACZA,EAAchD,KAAKC,KAAKT,EAAMyD,OAASZ,KAI7CN,EAAaU,IAAI,OAAjB,UAA4BO,IAC5BvB,EAAQrB,KAAK,CACX6B,OAAQF,EAAaY,eAsCnBhD,MAAOH,EAAMyD,OACbrD,QAASyC,EACTxC,KAAMqC,MClEdgB,IAASJ,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEAK,SAASC,eAAe,W","file":"static/js/main.26954444.chunk.js","sourcesContent":["export const PostFromSever = async() => {\n  const posts = await fetch('https://jsonplaceholder.typicode.com/posts');\n\n  return posts.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Pagination = ({ total, perPage, page, onPageChange }) => {\n  const paginationItem = Math.ceil(total / perPage);\n  const paginationList = [];\n\n  for (let i = 1; i <= paginationItem; i++) {\n    paginationList.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className=\"page-item\">\n        <button\n          type=\"button\"\n          disabled={page < 2}\n          onClick={() => onPageChange(page - 1)}\n          className=\"page-link\"\n        >\n          «\n        </button>\n      </li>\n      {paginationList.map(numberPage => (\n        numberPage === 1\n        || numberPage === paginationItem\n        || numberPage === page\n        || numberPage === page - 1\n        || numberPage === page + 1\n          ? (\n            <li\n              key={numberPage + Math.random()}\n              className={numberPage === page ? 'page-item active' : 'page-item'}\n            >\n              <button\n                type=\"button\"\n                onClick={() => onPageChange(numberPage)}\n                className=\"page-link\"\n              >\n                {numberPage}\n              </button>\n            </li>\n          ) : numberPage === 2 || numberPage === paginationItem - 1 ? (\n            <li key={numberPage + Math.random()}>...</li>\n          ) : null\n      ))}\n\n      <li className=\"page-item\">\n        <button\n          type=\"button\"\n          href=\"#\"\n          disabled={page > paginationItem - 1}\n          onClick={() => onPageChange(page + 1)}\n          className=\"page-link\"\n        >\n          »\n        </button>\n      </li>\n\n    </ul>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const VisiblePost = ({ posts, page, perPage }) => {\n  const startPost = (page - 1) * perPage;\n  const finishPost = startPost + perPage;\n\n  return (\n    posts.slice(startPost, finishPost).map(post => (\n      <div className=\"item\" key={post.id}>\n        {' '}\n        <span className=\"number\">{post.id}</span>\n        {post.title}\n      </div>\n    ))\n  );\n};\n\nVisiblePost.propTypes = {\n  posts: PropTypes.arrayOf().isRequired,\n  page: PropTypes.string.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { Route, useHistory, useLocation } from 'react-router-dom';\nimport { PostFromSever } from './helper/api';\nimport { Pagination } from './components/Pagination';\n\nimport { VisiblePost } from './components/VisiblePost';\n\nconst App = (props) => {\n  const [posts, getPosts] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    PostFromSever().then(getPosts);\n  }, []);\n\n  const searchParams = new URLSearchParams(location.search);\n  const pageParams = Number(searchParams.get('page')) || 1;\n  const perPageParams = Number(searchParams.get('perPage')) || 5;\n  const selectPerPage = [3, 5, 10, 20];\n\n  const onPageChange = (CurrentPage) => {\n    if (CurrentPage < 1\n       || CurrentPage > Math.ceil(posts.length / perPageParams)) {\n      return;\n    }\n\n    searchParams.set('page', `${CurrentPage}`);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  const handleChangePerPage = (event) => {\n    searchParams.set('perPage', event.target.value);\n    searchParams.set('page', 1);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Pagination</h1>\n      <select\n        value={perPageParams}\n        onChange={handleChangePerPage}\n        className=\"form-control\"\n      >\n        {selectPerPage.map(p => (\n          <option key={p} value={p}>{p}</option>\n        ))}\n\n      </select>\n      <Route\n        path=\"/\"\n        render={({ match }) => (\n          <VisiblePost\n            page={pageParams}\n            perPage={perPageParams}\n            posts={posts}\n          />\n        )}\n      />\n\n      <Pagination\n        onPageChange={onPageChange}\n        total={posts.length}\n        perPage={perPageParams}\n        page={pageParams}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  , document.getElementById('root'),\n);\n"],"sourceRoot":""}